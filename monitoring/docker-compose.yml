version: "3.9"

x-logging: &logging
  driver: json-file
  options:
    tag: "{{.ImageName}}|{{.Name}}"
    max-size: "300k"
    max-file: "10"

x-healthcheck: &healthcheck
  test: echo "Nothing provided" && exit 1
  interval: 60s
  retries: 5
  start_period: 20s
  timeout: 10s

services:
  grafana:
    # image: grafana/grafana:9.1.8-ubuntu
    image: grafana/grafana
    volumes:
      - grafana-data:/var/lib/grafana
      - ${PWD}/config/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - VIRTUAL_HOST=grafana
      - NETWORK_ACCESS=internal
      - VIRTUAL_PORT=3000
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - monitoring
    logging: *logging
    healthcheck:
      <<: *healthcheck
      test: wget --no-verbose --spider http://localhost:3000 || exit 1

  promtail:
    image: grafana/promtail:2.6.1
    ports:
      - "9080:9080"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - promtail-data:/var/lib/promtail/positions
      - ${PWD}/config/promtail/promtail.yml:/etc/promtail/promtail.yml:ro
    command:
      - "-config.file=/etc/promtail/promtail.yml"
    restart: unless-stopped
    networks:
      - app_python
      - monitoring
    depends_on:
      - loki
      - grafana
      - app_python
    logging: *logging
    healthcheck:
      <<: *healthcheck
      test: echo "soidet" e|| exit 1

  loki:
    image: grafana/loki:2.6.1
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/loki/
      - ${PWD}/config/loki/loki-config.yml:/etc/loki-config.yml:ro
    command: -config.file=/etc/loki-config.yml
    restart: unless-stopped
    healthcheck:
      <<: *healthcheck
      test: wget --no-verbose --spider http://localhost:3100 || exit 1
    networks:
      - monitoring
    logging: *logging

  app_python:
    image: 254689393895236/clock-clock:v1.0.0
    ports:
      - "5000:5000"
    restart: always
    healthcheck:
      << : *healthcheck
      test: wget --no-verbose --spider http://localhost:5000 || exit 1
    networks:
      - app_python
      - monitoring
    logging: *logging

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ${PWD}/config/prometheus/prometheus.yaml:/etc/prometheus-config.yaml
    command: --config.file=/etc/prometheus-config.yaml
    networks:
#      - app_python
      - monitoring
    logging: *logging
    healthcheck:
      <<: *healthcheck
      test: wget --no-verbose --spider http://localhost:9090 || exit 1

networks:
  app_python:
  monitoring:

volumes:
  grafana-data:
  loki-data:
  promtail-data: